spring:
  profiles:
    active: dev
---
spring:
  profiles: dev

  application:
    name: affairs-teacher

  cloud:
    nacos:
      discovery:
        server-addr: 192.168.43.102:8848

  datasource:
    username: root
    password: password
    url: jdbc:mysql://192.168.56.10:3306/new_affairs?useUnicode=true&useSSL=false&characterEncoding=utf8
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    druid:
      # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
      # 监控统计用的filter:stat
      # 日志用的filter:log4j
      # 防御sql注入的filter:wall
      filters: stat

      # 初始化时建立物理连接的个数
      initialSize: 1
      # 最大连接池数量
      maxActive: 20
      # 获取连接时最大等待时间，单位毫秒。
      # 配置了maxWait之后，缺省启用公平锁，并发效率会有所下降
      # 如果需要可以通过配置useUnfairLock属性为true使用非公平锁
      maxWait: 60000
      # 最小连接池数量
      minIdle: 1

      # Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接
      # testWhileIdle的判断依据
      timeBetweenEvictionRunsMillis: 60000
      # 连接保持空闲而不被驱逐的最小时间
      minEvictableIdleTimeMillis: 300000

      # 建议配置为true，不影响性能，并且保证安全性
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      testWhileIdle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnBorrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false
      # 用来检测连接是否有效的sql，要求是一个查询语句
      validation-query: select 1

      # 是否缓存preparedStatement，也就是PSCache
      # PSCache对支持游标的数据库性能提升巨大，比如说oracle，在mysql下建议关闭
      #      poolPreparedStatements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true
      #      maxOpenPreparedStatements: 20
      # asyncInit是1.1.4中新增加的配置，如果有initialSize数量较多时，打开会加快应用启动时间
      asyncInit: true

      # 采集web-jdbc关联监控的数据
      web-stat-filter:
        enabled: true
        url-pattern: /*
        # 排除一些不必要的url
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"

      # 配置Druid的统计信息入口
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
        login-username: admin
        login-password: admin

  redis:
    host: 192.168.56.10

  session:
    store-type: redis

server:
  port: 8000

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

---
spring:
  profiles: pro